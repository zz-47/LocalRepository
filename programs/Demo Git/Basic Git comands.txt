github password = zeeshan4759


                     ***  For doing changes in already existing repositories  ***
  



1 - Clone - Cloning a repository on our local machine :

     git clone <- some link ->

       /* there are two different types of cloning procedures 

         its either cloning a repository :

          > remote: remotely from github
          > Local: on computer repositories are cloned

          // we can use different protocols such as SSH / HTTP / Github Cloning
           , but we'll use HTTPS as its biginner friendly
          

            // we can change the directory by using "cd" then using the name of git folder
                

            // we can show all file using "ls" comand 
            // also we can see hidden files using "ls -a"
                                                          */


   2- Status - displays the state of the code

               git status


      // upon no changes it will show all clear state , but if we do some changes in a file 
         it will give error and asks us to add and then commit the changes

         >> there are four different types of git statuses :

      1- untracked  :
                     New files ,that git doesn't track
 
      2- modified   :
                      changed

      3- staged     :
                      file is ready to be committed
       
      4- unmodified : 
                      unchanged

       // Now to change the status to nothing has happened we'll do a 2 step process 

          1- we'll add the changes / they will be staged.
          2- we'll commit changes / it'llmake it unchanged


   3-  Add - adds new or changed files in your working directory to the git staging area.

            git add <- filename ->

          // this step is used for tracking / engaging purposes.

   4- it is the record of change .

           git commit -m "some message"

         // used to ovverride the files / save new ones.

   


     3- Push command -  push - upload local repo content to remote repo
 
              git push origin main      

 >> here git push is that we wanna push changes / local repository

>> origin means assigning address to a remote and default repostory of the authorized account on github

 // this was a direct push.


    


                  ***   For uploading your local / only on machine repository  ***    




    1- Init command - Used to create a new git repository...

          
          git init

          git remote add origin <-link->
            
            // used to add a remote repository where localrepository will be pushed... 

          git remote -v                  (to verify remote)

          git branch                     (to check branch)

   // branches are mainly used by different team working on same project / copies of same project

          git branch -M main             (To rename branch)
 
          git push origin main

   // we can set a shortcut for frequently pushed repositories as ,
     
          git push -u origin main

     // here -u stands for upstream , which marks the origin main as default push destination  





  4 - WORKFLOW :-

              
        Local Git :

    
         Github repository -> Clone -> Changes -> Add -> commit -> Push



  5 - Git branches :-

   
       >> different branches are used to do commits of different types .i.e commit to a bugfix
         
         update or a commit to other feature updates.


    // resultant commits of different branches are different from each other. 


        >> Branches can be merged at a point where both last commits of each branches
            can be released as a single update.

     // this process is used in corporation where work is contigeously done / in different 
     branches / copies of the git  / which are meant to be merged to orignal branch / copy



       >>> BRANCH Commands :-

                             

         git branch                             (to check branch)

         
         git branch -M main                     (to rename branch)

         
         git checkout <-branch name->           (to navigate from one to another branch)


         git checkout -b <-new branch name->     (to create new branch)


         git branch -d <-brach name->            (to delete branch)




     6 - MERGING Code  :-


           >> Way1 :

            
                git diff <-branch name->       (to compare commits , branches , files & more )

             
                git merge <-branch name->      (to merge 2 branches)


          >> Way2 :


                Create a PR


              >>>  PULL REQUEST :-


                           It lets you tell about changes you've pushed to a branch in a
                  repository on github

             // mainly used to filter features of a program by asking a senior Dev to review
                 the PR and comment out the unnecessary features.



        7 - PULL Command :-


                        git pull origin main


     // used to fetch and download content from a remote repository and immediately update
         repository to match that content.




        8 - RESOLVING MERGE CONFILCTS  :-

        
              An event , that takes place when Git is unable to automatically resolve differences
                b/w two commits.



        9 - UNDOING CHANGES  :-

                     
            Case 1 : staged changes

                
                    git reset <-file name->

                    git reset


            Case 2 : commited changes (for one commit)

      
                    git reset HEAD-1


            Case 3 : commited changes (for many commits)


                    git reset <-commit hash->

                    git reset --hard <-commit hash->



           // git log :  is used to see all commits and sequences.




           FORK : - 

   a fork is a new repository that shares code and visibility settings with the orignal "upstream"      
      repository

       // Fork is a rough copy.